{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  // Gets all books\n  getListings: function getListings() {\n    console.log(\"get listings\");\n    return axios.get(\"/api/users\");\n  },\n  // Gets the book with the given id\n  getListing: function getListing(id) {\n    return axios.get(\"/api/listing/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteListing: function deleteListing(id) {\n    return axios.delete(\"/api/listing/\" + id);\n  },\n  // Verify login credentials, return user ID\n  checkCredentials: function checkCredentials(userData) {\n    var users = [];\n    axios.get(\"api/users/\").then(function (res) {\n      return users = [res.data];\n    });\n    console.log(users); //   for (var i = 0; i < users.length; i++) {\n    //     if (users.[i].email === userData.email && users.[i].password === userData.password) {\n    //       return users.[i]._id\n    //     }\n    //   };\n  },\n  // Create login credentials in database, return new user ID\n  createCredentials: function createCredentials(userData) {\n    return axios.push(\"api/users\", userData);\n  } // Saves a book to the database\n  // saveListing: function (bookData) {\n  //   return axios.post(\"/api/listing\", listingData);\n  // },\n\n};","map":{"version":3,"sources":["/Users/giochavez14/Dropbox/My Mac (Giovanys-MBP.hsd1.co.comcast.net)/Desktop/DU_Code/Projects/ProjectThreeHaggle/client/src/utils/API.js"],"names":["axios","getListings","console","log","get","getListing","id","deleteListing","delete","checkCredentials","userData","users","then","res","data","createCredentials","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACb;AACAC,EAAAA,WAAW,EAAE,uBAAY;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAOH,KAAK,CAACI,GAAN,CAAU,YAAV,CAAP;AACD,GALY;AAMb;AACAC,EAAAA,UAAU,EAAE,oBAAUC,EAAV,EAAc;AACxB,WAAON,KAAK,CAACI,GAAN,CAAU,kBAAkBE,EAA5B,CAAP;AACD,GATY;AAUb;AACAC,EAAAA,aAAa,EAAE,uBAAUD,EAAV,EAAc;AAC3B,WAAON,KAAK,CAACQ,MAAN,CAAa,kBAAkBF,EAA/B,CAAP;AACD,GAbY;AAcb;AACAG,EAAAA,gBAAgB,EAAE,0BAAUC,QAAV,EAAoB;AACpC,QAAIC,KAAK,GAAG,EAAZ;AAEAX,IAAAA,KAAK,CAACI,GAAN,CAAU,YAAV,EACGQ,IADH,CACQ,UAACC,GAAD;AAAA,aAASF,KAAK,GAAG,CAACE,GAAG,CAACC,IAAL,CAAjB;AAAA,KADR;AAGAZ,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ,EANoC,CAQpC;AACA;AACA;AACA;AACA;AACD,GA5BY;AA6Bb;AACAI,EAAAA,iBAAiB,EAAE,2BAAUL,QAAV,EAAoB;AACrC,WAAOV,KAAK,CAACgB,IAAN,CAAW,WAAX,EAAwBN,QAAxB,CAAP;AACD,GAhCY,CAoCb;AACA;AACA;AACA;;AAvCa,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getListings: function () {\n    console.log(\"get listings\");\n    return axios.get(\"/api/users\");\n  },\n  // Gets the book with the given id\n  getListing: function (id) {\n    return axios.get(\"/api/listing/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteListing: function (id) {\n    return axios.delete(\"/api/listing/\" + id);\n  },\n  // Verify login credentials, return user ID\n  checkCredentials: function (userData) {\n    var users = []\n\n    axios.get(\"api/users/\")\n      .then((res) => users = [res.data]);\n\n    console.log(users)\n\n    //   for (var i = 0; i < users.length; i++) {\n    //     if (users.[i].email === userData.email && users.[i].password === userData.password) {\n    //       return users.[i]._id\n    //     }\n    //   };\n  },\n  // Create login credentials in database, return new user ID\n  createCredentials: function (userData) {\n    return axios.push(\"api/users\", userData);\n  },\n\n\n\n  // Saves a book to the database\n  // saveListing: function (bookData) {\n  //   return axios.post(\"/api/listing\", listingData);\n  // },\n};\n"]},"metadata":{},"sourceType":"module"}